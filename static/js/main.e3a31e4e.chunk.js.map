{"version":3,"sources":["Redux/types.js","Redux/actions.js","Components/UI/Alert.jsx","Components/PostForm.jsx","Components/Post.jsx","Components/SyncPosts.jsx","Components/UI/Loader.jsx","Components/AsyncPosts.jsx","Components/App.jsx","Redux/reducers/postsReducer.js","Redux/reducers/appReducer.js","Redux/reducers/rootReducer.js","Redux/midlleware.js","Redux/sagas.js","index.js"],"names":["CREATE_POST","GET_ASYNC_POSTS","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","REQUEST_POSTS","hideLoaderA","type","showAlertA","text","dispatch","payload","setTimeout","hideAlertA","Alert","className","role","PostForm","useDispatch","alert","useSelector","state","appR","useState","title","setTitle","onSubmit","event","preventDefault","trim","newPost","id","Date","now","toString","createPostA","value","onChange","target","Post","post","SyncPosts","syncPosts","postsR","length","map","Loader","AsyncPosts","asyncPosts","loader","onClick","App","initialState","rootReducer","combineReducers","action","forbidden","sagaWatcher","sagaWorker","takeEvery","put","call","getAsyncPostsS","a","fetch","response","json","saga","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","thunk","next","filter","word","includes","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a31e4e.chunk.js","sourcesContent":["export const CREATE_POST = 'POSTS/CREATE_POST'\r\nexport const GET_ASYNC_POSTS = 'POSTS/GET_ASYNC_POSTS'\r\n\r\nexport const SHOW_LOADER = 'APP/SHOW_LOADER'\r\nexport const HIDE_LOADER = 'APP/HIDE_LOADER'\r\n\r\nexport const SHOW_ALERT = 'APP/SHOW_ALERT'\r\nexport const HIDE_ALERT = 'APP/HIDE_ALERT'\r\n\r\nexport const REQUEST_POSTS = 'POSTS/REQUEST_POSTS'\r\n","import { \r\n\tCREATE_POST, \r\n\tGET_ASYNC_POSTS, \r\n\tSHOW_LOADER, \r\n\tHIDE_LOADER, \r\n\tSHOW_ALERT, \r\n\tHIDE_ALERT, \r\n\tREQUEST_POSTS\r\n} from \"./types\";\r\n\r\nexport const createPostA = (newPost) => ({ type: CREATE_POST, payload: newPost })\r\n\r\nexport const showLoaderA = () => ({ type: SHOW_LOADER })\r\nexport const hideLoaderA = () => ({ type: HIDE_LOADER })\r\n\r\nexport const showAlertA = (text) => dispatch => {\r\n\tdispatch({type: SHOW_ALERT, payload: text})\r\n\tsetTimeout(() => { dispatch(hideAlertA()) }, 3000)\r\n}\r\n\r\nexport const hideAlertA = () => ({ type: HIDE_ALERT })\r\n\r\n\r\nexport const getAsyncPostsA = () => {\r\n\treturn {type: REQUEST_POSTS}\r\n}","import React from \"react\"\r\n\r\nexport const Alert = ({ text }) => {\r\n\treturn (\r\n\t\t<div className=\"alert alert-dark\" role=\"alert\">\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t)\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { createPostA, showAlertA } from '../Redux/actions'\r\nimport { Alert } from './UI/Alert'\r\n\r\nexport const PostForm = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst alert = useSelector(state => state.appR.alert)\r\n\tconst [title, setTitle] = useState('')\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tif(!title.trim()) return dispatch(showAlertA('Title of the post can`t be empty'))\r\n\r\n\t\tconst newPost = {\r\n\t\t\ttitle, \r\n\t\t\tid: Date.now().toString()\r\n\t\t}\r\n\t\tdispatch(createPostA(newPost))\r\n\t\tsetTitle('')\r\n\t}\r\n\r\n\tconst inputHandler = (event) => {\r\n\t\tsetTitle(event.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t{alert && <Alert text={alert}/>}\r\n\t\t\t<h2>Post Title</h2>\r\n\t\t\t<div className=\"input-group mb-3\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\taria-label=\"Sizing example input\"\r\n\t\t\t\t\taria-describedby=\"inputGroup-sizing-default\"\r\n\t\t\t\t\tvalue={title}\r\n\t\t\t\t\tonChange={inputHandler}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<button type=\"submit\" className=\"btn btn-success\">\r\n\t\t\t\tCreate\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}","import React from 'react'\r\n\r\nexport const Post = ({post}) => {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t{post.title}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Post } from './Post'\r\n\r\nexport const SyncPosts = () => {\r\n\tconst syncPosts = useSelector(state => state.postsR.syncPosts)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{syncPosts.length ?\r\n\t\t\t\tsyncPosts.map(post => <Post post={post} key={post.id} />)\r\n\t\t\t\t: <p className='text-center'>There are no posts yet</p>}\r\n\t\t</>\r\n\t)\r\n}","import React from \"react\"\r\n\r\nexport const Loader = () => {\r\n\treturn (\r\n\t\t<div className=\"spinner-border\" role=\"status\">\r\n\t\t\t<span className=\"visually-hidden\">Loading...</span>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getAsyncPostsA } from '../Redux/actions'\r\nimport { Post } from './Post'\r\nimport { Loader } from './UI/Loader'\r\n\r\n\r\nexport const AsyncPosts = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst asyncPosts = useSelector(state => state.postsR.asyncPosts)\r\n\tconst loader = useSelector(state => state.appR.loader)\r\n\r\n\tif (loader) return <Loader />\r\n\tif (!asyncPosts.length) return <button\r\n\t\ttype=\"button\"\r\n\t\tclassName=\"btn btn-primary\"\r\n\t\tonClick={() => dispatch(getAsyncPostsA())}\r\n\t>Download</button>\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{asyncPosts.map(post => <Post post={post} key={post.id} />)}\r\n\t\t</>\r\n\t)\r\n}","import React from 'react'\n\nimport { PostForm } from './PostForm'\nimport { SyncPosts } from './SyncPosts'\nimport { AsyncPosts } from './AsyncPosts'\n\nexport const App = () => {\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className=\"row my-5\">\n\t\t\t\t<PostForm />\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col me-3\">\n\t\t\t\t\t<h3 className=\"mb-3\">SyncPosts</h3>\n\t\t\t\t\t<SyncPosts />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col ms-3\">\n\t\t\t\t\t<h3 className=\"mb-3\">AsyncPosts</h3>\n\t\t\t\t\t<AsyncPosts />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { CREATE_POST, GET_ASYNC_POSTS } from \"../types\"\r\n\r\nconst initialState = {\r\n\tsyncPosts: [],\r\n\tasyncPosts: [],\r\n}\r\n\r\nexport const postsReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CREATE_POST: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsyncPosts: [...state.syncPosts, action.payload]\r\n\t\t\t}\r\n\t\tcase GET_ASYNC_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tasyncPosts: action.payload\r\n\t\t\t}\r\n\t\tdefault: return state\r\n\t}\r\n}","import { SHOW_LOADER, HIDE_LOADER, SHOW_ALERT, HIDE_ALERT } from \"../types\"\r\n\r\nconst initialState = {\r\n\tloader: false,\r\n\talert: null,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SHOW_LOADER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloader: true\r\n\t\t\t}\r\n\t\tcase HIDE_LOADER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloader: false\r\n\t\t\t}\r\n\t\tcase SHOW_ALERT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\talert: action.payload\r\n\t\t\t}\r\n\t\tcase HIDE_ALERT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\talert: null\r\n\t\t\t}\r\n\t\tdefault: return state\r\n\t}\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport { postsReducer } from './postsReducer'\r\nimport { appReducer } from './appReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n\tpostsR: postsReducer,\r\n\tappR: appReducer\r\n})","import { showAlertA } from './actions'\r\nimport { CREATE_POST } from './types'\r\n\r\nconst forbidden = ['fuck', 'spam', 'php']\r\n\r\nexport const forbiddenWordsMiddleware = ({ dispatch }) => {\r\n\treturn (next) => (action) => {\r\n\t\tif (action.type === CREATE_POST) {\r\n\t\t\tconst found = forbidden.filter(word => action.payload.title.includes(word))\r\n\t\t\tif (found.length) {\r\n\t\t\t\treturn dispatch(showAlertA('You are spamer! Go home!'))\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn next(action)\r\n\t}\r\n}\r\n","import { takeEvery, put, call } from 'redux-saga/effects'\r\nimport { hideLoaderA, showAlertA, showLoaderA } from './actions'\r\nimport { GET_ASYNC_POSTS, REQUEST_POSTS } from './types'\r\n\r\nexport function* sagaWatcher() {\r\n\tyield takeEvery(REQUEST_POSTS, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n\ttry {\r\n\t\tyield put(showLoaderA())\r\n\t\tconst payload = yield call(getAsyncPostsS) \r\n\t\tyield put({type: GET_ASYNC_POSTS, payload})\r\n\t\tyield put(hideLoaderA())\r\n\t} catch (e) {\r\n\t\tyield put(showAlertA('Somithing was wrong'))\r\n\t\tyield put(hideLoaderA())\r\n\t}\r\n}\r\n\r\nasync function getAsyncPostsS() {\r\n\tconst response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5')\r\n\treturn await response.json()\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { App } from './Components/App'\nimport { rootReducer } from './Redux/reducers/rootReducer'\nimport { forbiddenWordsMiddleware } from './Redux/midlleware';\nimport { sagaWatcher } from './Redux/sagas';\n\nconst saga = createSagaMiddleware()\n\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(\n\t\tapplyMiddleware(thunk, forbiddenWordsMiddleware, saga),\n\t)\n)\n\nsaga.run(sagaWatcher)\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n"],"sourceRoot":""}